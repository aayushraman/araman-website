cols.inst <- RColorBrewer::brewer.pal(name = "Dark2", n = 4)
cols.fcID <- RColorBrewer::brewer.pal(name = "Set1", n = 7)
cols.run <- RColorBrewer::brewer.pal(name = "Accent", n = 8)
cols <- list("Subtype" = cols.subtype, "Instrument" = cols.inst,
"Flowcell" = cols.fcID, "Run Number" = cols.run)
png(filename = '../Revision/consensusplot_10000-Regions_NMF-100_batch.png',
width = 1200, height = 1000)
consensusmap(res1$fit$'4', annColors = cols, annCol = NA,
tracks = c("consensus:"),
annCol = list("Subtype" = Subtype,
"Instrument" = batch_file$Sequencer,
"Run Number" = batch_file$RunID,
"Flowcell" = batch_file$Flowcell), fontsize = 14)
dev.off()
png(filename = '../Revision/consensusplot_10000-Regions_NMF-100_batch.png',
width = 1200, height = 1000)
consensusmap(res1$fit$'4', annColors = cols, tracks = c("consensus:"),
annCol = list("Subtype" = Subtype,
"Instrument" = batch_file$Sequencer,
"Run Number" = batch_file$RunID,
"Flowcell" = batch_file$Flowcell), fontsize = 14)
dev.off()
png(filename = '../Revision/consensusplot_10000-Regions_NMF-100_batch.png',
width = 1200, height = 1000)
consensusmap(res1$fit$'4', annColors = cols, tracks = c("consensus:"),
annCol = list("Instrument" = batch_file$Sequencer,
"Run Number" = batch_file$RunID,
"Flowcell" = batch_file$Flowcell), fontsize = 14)
dev.off()
png(filename = '../Revision/checkBatch_consensusmatrix.png',
width = 1200, height = 1000)
consensusmap(res1$fit$'4', annColors = cols, tracks = c("consensus:"),
annCol = list("Instrument" = batch_file$Sequencer,
"Run Number" = batch_file$RunID,
"Flowcell" = batch_file$Flowcell), fontsize = 14)
dev.off()
?consensusmap
?consensusmap
?aheatmap
1.75/0.9
library(ArchR)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(ggpubr)
## liftOver
load("/Users/araman/Desktop/CREs/all_CREs_per-sample.RData")
chain <- import.chain("~/Desktop/CREs/hg38ToHg19.over.chain")
hg19 <- as.data.frame(liftOver(hg38, chain))
hg19 <- sort(GRanges(hg19))
hg19 <- hg19[grep(pattern = "pELS|dELS|pELS", x = hg19$CRE)]
hg19 <- hg19[width(hg19) >= 151]
## overlap of colon enhancers with
metadata <- read.table(file = "~/Desktop/CREs/metadata.txt", header = T,
sep = "\t", quote = "", stringsAsFactors = F, fill = T)
head(metadata)
annot <- c("brain", "immune", "colon", "connective_tissue", "embryo",
"epithelium", "fibroblast", "pancreas", "prostate", "skin",
"small_intestine")
idx <- which(metadata$Annotation %in% annot)
metadata <- metadata[idx,]
## DERs
setwd("~/Desktop/BCM-MDProjects/CRCT/dat_cms-epic/DERs")
ders1 <- import("Cluster1.bed", format = "bed")
ders2 <- import("Cluster2.bed", format = "bed")
ders3 <- import("Cluster3.bed", format = "bed")
ders4 <- import("Cluster4.bed", format = "bed")
## df for UpSetR
df <- data.frame()
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
###############################################################################################
# @Author: Ayush T. Raman
# Rai Lab, Genome Center, MD Anderson
# Date: Feb 24th, 2021
#
# Program is used for:
# 1. Checking the batch effects
###############################################################################################
rm(list = ls())
## Working Directory
setwd("/Users/araman/Desktop/CREs/")
## Library
library(dplyr)
library(ggplot2)
library(ggpubr)
library(pheatmap)
library(RColorBrewer)
library(tibble)
library(rtracklayer)
rm(list = ls())
## libraries
library(dplyr)
library(ggplot2)
library(ggpubr)
library(GenomicRanges)
library(rtracklayer)
## liftOver
load("/Users/araman/Desktop/CREs/all_CREs_per-sample.RData")
chain <- import.chain("~/Desktop/CREs/hg38ToHg19.over.chain")
hg19 <- as.data.frame(liftOver(hg38, chain))
hg19 <- sort(GRanges(hg19))
hg19 <- hg19[grep(pattern = "pELS|dELS|pELS", x = hg19$CRE)]
hg19 <- hg19[width(hg19) >= 151]
## overlap of colon enhancers with
metadata <- read.table(file = "~/Desktop/CREs/metadata.txt", header = T,
sep = "\t", quote = "", stringsAsFactors = F, fill = T)
head(metadata)
annot <- c("brain", "immune", "colon", "connective_tissue", "embryo",
"epithelium", "fibroblast", "pancreas", "prostate", "skin",
"small_intestine")
idx <- which(metadata$Annotation %in% annot)
metadata <- metadata[idx,]
## DERs
setwd("~/Desktop/BCM-MDProjects/CRCT/dat_cms-epic/DERs")
ders1 <- import("Cluster1.bed", format = "bed")
ders2 <- import("Cluster2.bed", format = "bed")
ders3 <- import("Cluster3.bed", format = "bed")
ders4 <- import("Cluster4.bed", format = "bed")
df <- data.frame()
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
j <- 1
feat <- annot[j]
samples <- metadata[which(metadata$Annotation == feat),"sample"]
grep(pattern = "H3K27ac" cre.type)
grep(pattern = "H3K27ac", cre.type)
hg19.dat$ACC112
cre.type
cre.type <- hg19.dat[1:10,samples]
grep(pattern = "H3K27ac", cre.type)
cre.type
head(hg19.dat)
head(hg19.dat[1:5,])
head(hg19.dat[1:5,1:10])
grep(pattern = "H3K27ac", cre.type)
cre.type <- hg19.dat[1:10,c("cCRE_ID",samples)]
head(cre.type)
cre.type
grep(pattern = "H3K27ac", cre.type)
grep(pattern = "H3K27ac", cre.type)
cre.type <- hg19.dat[1,c("cCRE_ID",samples)]
grep(pattern = "H3K27ac", cre.type)
which(grep(pattern = "H3K27ac", cre.type)
)
grep(pattern = "H3K27ac", cre.type)
grep(pattern = "H3K27ac", cre.type)
which(grep(pattern = "H3K27ac", cre.type))
which(is.na(grep(pattern = "H3K27ac", cre.type)))
is.na(grep(pattern = "H3K27ac", cre.type))
grep(pattern = "H3K27ac", cre.type) == "integer(0)"
grep(pattern = "H3K27ac", cre.type)
grep(pattern = "H3K27ac", cre.type)
cre.type
grep(pattern = "Unclassified", cre.type)
?grep
grepl(pattern = "Unclassified", cre.type)
sum(grepl(pattern = "Unclassified", cre.type))
sum(grepl(pattern = "Unclassified", cre.type))
cre.type <- hg19.dat[1:20,c("cCRE_ID",samples)]
sum(grepl(pattern = "Unclassified", cre.type))
feat
ifelse(sum(grepl(pattern = "Unclassified", cre.type)) > 0, 1, 0)
i <- 1
hg19.dat[1,1:10]
vec
ifelse(sum(grepl(pattern = "Unclassified", cre.type)) > 0, 1, 0)
vec
vec
df <- data.frame()
vec <- c()
for(j in 1:length(annot)){
feat <- annot[j]
samples <- metadata[which(metadata$Annotation == feat),"sample"]
cre.type <- hg19.dat[i,c("cCRE_ID",samples)]
pres <- ifelse(sum(grepl(pattern = "Unclassified", cre.type)) > 0, 1, 0)
vec <- c(vec,pres)
}
vec
for(j in 1:length(annot)){
feat <- annot[j]
samples <- metadata[which(metadata$Annotation == feat),"sample"]
cre.type <- hg19.dat[i,c("cCRE_ID",samples)]
pres <- ifelse(sum(grepl(pattern = "H3K27ac", cre.type)) > 0, 1, 0)
vec <- c(vec,pres)
}
vec
vec <- c()
for(j in 1:length(annot)){
feat <- annot[j]
samples <- metadata[which(metadata$Annotation == feat),"sample"]
cre.type <- hg19.dat[i,c("cCRE_ID",samples)]
pres <- ifelse(sum(grepl(pattern = "H3K27ac", cre.type)) > 0, 1, 0)
vec <- c(vec,pres)
}
vec
df <- data.frame()
vec <- c()
for(j in 1:length(annot)){
feat <- annot[j]
samples <- metadata[which(metadata$Annotation == feat),"sample"]
cre.type <- hg19.dat[i,c("cCRE_ID",samples)]
pres <- ifelse(sum(grepl(pattern = "H3K27ac", cre.type)) > 0, 1, 0)
vec <- c(vec,pres)
}
df <- rbind(df, vec)
df
head(metadata)
feat[3]
annot[3]
feat <- annot[3]
feat
samples <- metadata[which(metadata$Annotation == feat),"sample"]
cre.type <- hg19.dat[i,c("cCRE_ID",samples)]
cre.type
pres <- ifelse(sum(grepl(pattern = "H3K27ac", cre.type)) > 0, 1, 0)
pres
df
df <- data.frame()
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
df <- data.frame()
for(i in 1:length(hg19.dat)){
vec <- c()
for(j in 1:length(annot)){
feat <- annot[j]
samples <- metadata[which(metadata$Annotation == feat),"sample"]
cre.type <- hg19.dat[i,c("cCRE_ID",samples)]
pres <- ifelse(sum(grepl(pattern = "H3K27ac", cre.type)) > 0, 1, 0)
vec <- c(vec,pres)
}
df <- rbind(df, vec)
}
df
dim(df)
nrow(hg19.dat)
## df for UpSetR
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
df <- data.frame()
for(i in 1:nrow(hg19.dat)){
vec <- c()
for(j in 1:length(annot)){
feat <- annot[j]
samples <- metadata[which(metadata$Annotation == feat),"sample"]
cre.type <- hg19.dat[i,c("cCRE_ID",samples)]
pres <- ifelse(sum(grepl(pattern = "H3K27ac", cre.type)) > 0, 1, 0)
vec <- c(vec,pres)
}
df <- rbind(df, vec)
}
head(df)
dim(df)
hg19.dat[,k]
colnames(hg19.dat[,1])
colnames(hg19.dat)
colnames(hg19.dat)[1:10]
colnames(hg19.dat)[1:11]
colnames(metadata)
metadata$sample
cols
metadata$sample
colnames(hg19.dat) %in% metadata$sample
colnames(hg19.dat)[colnames(hg19.dat) %in% metadata$sample]
columns <- colnames(hg19.dat)[colnames(hg19.dat) %in% metadata$sample]
columns
columns
columns <- colnames(hg19.dat)[colnames(hg19.dat) %in% metadata$sample]
columns
columns <- c(colnames(hg19.dat)[1:10], columns)
columns
## df for UpSetR
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
columns <- colnames(hg19.dat)[colnames(hg19.dat) %in% metadata$sample]
columns <- c(colnames(hg19.dat)[1:10], columns)
hg19.dat <- hg19.dat[,columns]
hg19.dat[,11]
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
columns <- colnames(hg19.dat)[colnames(hg19.dat) %in% metadata$sample]
columns <- c(colnames(hg19.dat)[1:10], columns)
hg19.dat <- hg19.dat[,columns]
cord <- c()
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
columns <- colnames(hg19.dat)[colnames(hg19.dat) %in% metadata$sample]
columns <- c(colnames(hg19.dat)[1:10], columns)
hg19.dat <- hg19.dat[,columns]
gcord <- c()
hg19.dat[,1]
hg19.dat[,11]
grepl(pattern = "H3K27ac", x = hg19.dat[,k])
grepl(pattern = "H3K27ac", x = hg19.dat[,11])
which(grepl(pattern = "H3K27ac", x = hg19.dat[,11]) == TRUE)
length(which(grepl(pattern = "H3K27ac", x = hg19.dat[,11]) == TRUE))
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
columns <- colnames(hg19.dat)[colnames(hg19.dat) %in% metadata$sample]
columns <- c(colnames(hg19.dat)[1:10], columns)
hg19.dat <- hg19.dat[,columns]
gcord <- c()
for(k in 11:131){
ind <- which(grepl(pattern = "H3K27ac", x = hg19.dat[,k]) == TRUE)
gcord <- c(gcord, ind)
}
k
grepl(pattern = "H3K27ac", x = hg19.dat[,k])
grepl
unique(hg19.dat[,k])
hg19.dat[,104]
hg19.dat
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
columns <- colnames(hg19.dat)[colnames(hg19.dat) %in% metadata$sample]
columns <- c(colnames(hg19.dat)[1:10], columns)
hg19.dat <- hg19.dat[,columns]
gcord <- c()
## subsetting genomic coord
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
columns <- colnames(hg19.dat)[colnames(hg19.dat) %in% metadata$sample]
columns <- c(colnames(hg19.dat)[1:10], columns)
hg19.dat <- hg19.dat[,columns]
gcord <- c()
ncol(hg19.dat)
for(k in 11:ncol(hg19.dat)){
ind <- which(grepl(pattern = "H3K27ac", x = hg19.dat[,k]) == TRUE)
gcord <- c(gcord, ind)
}
unique(gcord)
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
columns <- colnames(hg19.dat)[colnames(hg19.dat) %in% metadata$sample]
columns <- c(colnames(hg19.dat)[1:10], columns)
hg19.dat <- hg19.dat[,columns]
gcord <- c()
for(k in 11:ncol(hg19.dat)){
ind <- which(grepl(pattern = "H3K27ac", x = hg19.dat[,k]) == TRUE)
gcord <- c(gcord, ind)
}
gcord <- unique(gcord)
hg19.dat <- hg19.dat[gcord, ]
dim(hg19.dat)
j
length(annot)
j <- 1
feat <- annot[j]
feat
samples <- metadata[which(metadata$Annotation == feat),"sample"]
samples
cre.type <- hg19.dat[,samples]
head(cre.type)
dim(cre.type)
ifelse(sum(grepl(pattern = "H3K27ac", cre.type[1:20,])) > 0, 1, 0)
grepl(pattern = "H3K27ac", cre.type[1:20,])
length(grepl(pattern = "H3K27ac", cre.type[1:20,]))
cre.type[grepl(pattern = "H3K27ac", cre.type[1:20,])]
grepl(pattern = "H3K27ac", cre.type[1:20,])
grep(pattern = "H3K27ac", cre.type[1:20,])
cre.type[1:20,]
head(cre.type[1:20,])
215008-25468
209672-25468
184204/209672
25468/209672
87.85+12.14
231331/237962
36154/231331
36154/231331
36154/231331
(231331-36154)/231331
(231331-36154)
28290/181785
(181785-28290)/181785
(181785-28290)
40282/207917
(207917-40282)/207917
(207917-40282)
#####################################################
# @Author: Ayush T. Raman
# Aryee Lab, Broad Institute of MIT and Harvard
# Date: 1st August 2020
#
# Program is used for:
# 1. scRNA-seq analysis using seurat
#####################################################
## Clearing Workspace
rm(list = ls())
set.seed(1234)
## workspace
setwd("~/Desktop/scDNMTKO_Ola/scRNA-seq/scRNAseq/src/")
source("scRNAseq_analysis_final/libraries.R")
file.path <- "~/Desktop/scDNMTKO_Ola/scRNA-seq/scRNAseq/dat/STAR_stringent/"
num.Reads <- 0
cols <- c("#4DAF4A", "dodgerblue", "#FDE725FF", "#FF7F00", "#E41A1C")
shapes <- c(19, 15, 17, 18, 3, 4, 8, 10, 13)
load(file = "../results/seurat.RData")
View(markers)
load(file = "../results/markers_topicFeat.RData")
View(markers.ora)
View(markers)
View(topic.ora)
View(topic.ora)
rm(list = ls())
202848-4782
198066/202848
(192467-4782)/192467
4782/192467
4666/184881
(184881-4666)/184881
184881-4666)
184881-4666
192467-4782
207810/215008
(207810+80)/215008
207810/(207810+80)
207810/(207810+80)
80/(207810+80)
80/(207810+80)*100
228696/(228696 + 96)
96/(228696 + 96)
179918/(179918+100)
100/(179918+100)
100/(179918+100)*100
205456/(205456 + 126)
126/(205456 + 126)
190156/(190156+56)
56/(190156+56)
182942/(182942+34)
34/182942
BiocManager::install("HiCcompare")
#############################################################
# @Author: Ayush T Raman
# Meissner Lab, Broad Institute of MIT and Harvard
# Date: 26th Jan 2020
#
# Program is used for:
# 1. Project with Sudhir
# 2. summary analysis with the overlap
#############################################################
rm(list = ls())
library(BSgenome.Hsapiens.UCSC.hg19)
library(GenomicRanges)
library(ggpubr)
library(IlluminaHumanMethylation450kanno.ilmn12.hg19)
library(patchwork)
library(reshape2)
library(SummarizedExperiment)
library(TCGAbiolinks)
library(tidyverse)
## function
theme_ar <- function(){
theme(plot.title = element_text(size=16, face="bold", hjust = 0.5),
axis.title.y= element_text(size=16, colour="black", face="bold"),
axis.text.y = element_text(size=16, colour="black", face="bold"),
axis.title.x = element_text(size=16, colour="black", face="bold"),
axis.text.x = element_text(size=14, colour="black", face="bold"),
legend.text = element_text(size = 10, face = "bold"),
legend.title = element_blank())
}
## hypo regions and agg-methylation dataset
setwd("~/Desktop/sudhir/dat")
load("../results/wgbs/AggMethRegions-vs-hypoRegions.RData")
data  <- read.table(file = "ConstantHypoRegions_3KBFromCGIs_HG19.txt",
header = T, sep = "\t", quote = "", stringsAsFactors = F)
data <- sort(GRanges(data))
crc <- agg.meth.obj$`COAD-READ`
crc <- GRanges(crc[crc$methdiff > 0.2, ])
View(as.data.frame(data[queryHits(findOverlaps(data,crc))]))
## loops from sarah's dataset
library(readxl)
loops <- read_excel(path = "../dat/sarah_crc/diff_loops.xlsx", skip = 1)
loops <- loops[loops$geneID %in% data$Gene.Name,]
View(loops)
loops <- read_excel(path = "../dat/sarah_crc/diff_loops.xlsx", skip = 1)
loops
crc
loops <- read_excel(path = "../dat/sarah_crc/diff_loops.xlsx", skip = 1)
loops <- read_excel(path = "../dat/sarah_crc/diff_loops.xlsx", skip = 1)
loops <- loops[loops$geneID %in% data$Gene.Name,]
loops
loops$geneID
loops$geneID[1:9]
data.frame(loops$geneID[1:9])
1655116-132312
132312/1655116
1655116-681629
827558-(681629+132312)
681629/827558
132312/827558
149-29
827558-(803064+10877)
10877/827558
827558-(809019+10877)
(10877+7662)/827558
(10877)/(827558-7662)
214+28
124+28
121+16
118+89
