## 373 / fw
web <- "http://crispor.tefor.net/crispor.py?batchId=UwaSTfGlweDZEFhl9qeh&pamId=s372%2B&showMh=lindel"
file <- "373-fw.txt"
fw.373 <- extractCrispor(web, file, strand = "fwd", seq = dppa3)
## plots
library(patchwork)
(rev.53$plot / rev.87$plot) | (rev.121$plot / rev.151$plot)
(rev.53$plot / rev.87$plot)
(rev.53$plot / rev.87$plot) | (rev.121$plot / rev.151$plot)
q1 <- (rev.53$plot / rev.87$plot) | (rev.121$plot / rev.151$plot)
ggsave(filename = "../../results/simulation/dist-deletions.png", plot = q1,
scale = 1, width = 16, height = 10, units = c("in"),
dpi = 500, limitsize = TRUE)
ggsave(filename = "../../results/simulation/dist-deletions.png", plot = q1,
scale = 1, width = 18, height = 12, units = c("in"),
dpi = 500, limitsize = TRUE)
###################################################################
# @Author: Ayush T Raman
# Gnirke Lab, Broad Institute of MIT and Harvard
# Date: 11th Feb, 2021
#
# Program is used for:
# 1. Extracting DNA break repair outcome predictions (lindel)
###################################################################
rm(list = ls())
setwd("/Users/araman/Desktop/DKO-DNMT3/dat-info/crispor/")
## library
library(rvest)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
library(ggplot2)
## function
theme_ar <- function(){
theme(title = element_text(size = 20, colour="black", face="bold", vjust = 2),
axis.title.y = element_text(size = 20, colour="black", face="bold"),
axis.text.y = element_text(size = 16, colour="black", face="bold"),
axis.title.x = element_text(size = 20, colour="black", face="bold"),
axis.text.x = element_text(size = 16, colour="black", face="bold"),
legend.text = element_text(size = 14, face = "bold"),
legend.title = element_blank())
}
extractCrispor <- function(web, filename, strand, seq){
webpage <- read_html(web)
dat <- html_nodes(webpage, "table") %>%
html_table(fill = TRUE) %>% as.data.frame()
for(i in 1:nrow(dat)){
if(i == 1){
if(strand == "fwd"){
str <- DNAString(gsub(pattern = "(.*) \\| (.*)",
replacement = "\\1", dat[1,2]))
editSite <- end(matchPattern(pattern = str, subject = seq))
dat$editSite[i] <- editSite
dat$length[i] <- length(editSite)
}else if(strand == "rev"){
str <- reverseComplement(DNAString(gsub(pattern = "(.*) \\| (.*)",
replacement = "\\2", dat[1,2])))
editSite <- end(matchPattern(pattern = str, subject = seq)) + 1
dat$editSite[i] <- editSite
dat$length[i] <- length(editSite)
}
}
if(i > 1){
if(length(grep(pattern = "I", dat$Effect[i])) > 0){
times <- gsub(pattern = "I(.*)\\+(.*)", replacement = "\\1",
dat$Effect[i])
nucl <- gsub(pattern = "I(.*)\\+(.*)", replacement = "\\2",
dat$Effect[i])
if(nucl != "X"){
if(strand == "fwd"){
nucl <- DNAString(nucl)
}else{
nucl <- reverseComplement(DNAString(nucl))
}
}
dat$editSite[i] <- paste0(rep(as.character(nucl),times),collapse = "")
dat$length[i] <- length(dat$editSite[i])
}else if(length(grep(pattern = "D", dat$Effect[i])) > 0){
del <- as.numeric(gsub(pattern = "D(.*) (.*)", replacement = "\\1",
dat$Effect[i]))
pos <- as.numeric(gsub(pattern = "D(.*) (.*)", replacement = "\\2",
dat$Effect[i]))
if(strand == "fwd"){
editSite.temp <- editSite + pos + 1
dat$editSite[i] <- paste0(editSite.temp,"-",editSite.temp+del-1)
dat$length[i] <- del
}else{
editSite.temp <- editSite - pos - 1
dat$editSite[i] <- paste0(editSite.temp-del+1,"-",editSite.temp)
dat$length[i] <- del
}
}
}
}
cat("editSite: ",editSite,"\n")
x <- dat$length[-grep(pattern = "[A-Z]", x = dat$editSite)]
x <- data.frame(table(x))
p1 <- ggplot(x,aes(x = x, y = Freq)) + geom_bar(stat="identity") +
theme_classic() + theme_ar() + xlab(paste0("Deletions (",file,")")) +
ylab("Frequency")
# hist(dat$length[-grep(pattern = "[A-Z]", x = dat$editSite)],
#      main = file, xlab = "Deletions")
# write.table(x = dat, file = filename, quote = F, sep = "\t", row.names = F,
#             col.names = T)
return(list(dat = dat, plot = p1))
}
## dppa3 amplicon
dppa3 <- Hsapiens$chr12[7858456:7858932]
## 53 rev
web <- "http://crispor.tefor.net/crispor.py?batchId=UwaSTfGlweDZEFhl9qeh&pamId=s52-&showMh=lindel"
file <- "53-rev.txt"
rev.53 <- extractCrispor(web, file, strand = "rev", seq = dppa3)
## 87 rev
web <- "http://crispor.tefor.net/crispor.py?batchId=UwaSTfGlweDZEFhl9qeh&pamId=s87-&showMh=lindel"
file <- "87-rev.txt"
rev.87 <- extractCrispor(web, file, strand = "rev", seq = dppa3)
## 121 / rev
web <- "http://crispor.tefor.net/crispor.py?batchId=UwaSTfGlweDZEFhl9qeh&pamId=s120-&showMh=lindel"
file <- "121-rev.txt"
rev.121 <- extractCrispor(web, file, strand = "rev", seq = dppa3)
## 151 / rev
web <- "http://crispor.tefor.net/crispor.py?batchId=UwaSTfGlweDZEFhl9qeh&pamId=s150-&showMh=lindel"
file <- "151-rev.txt"
rev.151 <- extractCrispor(web, file, strand = "rev", seq = dppa3)
## 198 / rev
web <- "http://crispor.tefor.net/crispor.py?batchId=UwaSTfGlweDZEFhl9qeh&pamId=s197-&showMh=lindel"
file <- "198-rev.txt"
rev.198 <- extractCrispor(web, file, strand = "rev", seq = dppa3)
## 236 / fw
web <- "http://crispor.tefor.net/crispor.py?batchId=UwaSTfGlweDZEFhl9qeh&pamId=s235%2B&showMh=lindel"
file <- "236-fw.txt"
fw.236 <- extractCrispor(web, file, strand = "fwd", seq = dppa3)
## 277 / fw
web <- "http://crispor.tefor.net/crispor.py?batchId=UwaSTfGlweDZEFhl9qeh&pamId=s276%2B&showMh=lindel"
file <- "277-fw.txt"
fw.277 <- extractCrispor(web, file, strand = "fwd", seq = dppa3)
## 323 / rev
web <- "http://crispor.tefor.net/crispor.py?batchId=UwaSTfGlweDZEFhl9qeh&pamId=s322-&showMh=lindel"
file <- "323-rev.txt"
rev.323 <- extractCrispor(web, file, strand = "rev", seq = dppa3)
## 373 / fw
web <- "http://crispor.tefor.net/crispor.py?batchId=UwaSTfGlweDZEFhl9qeh&pamId=s372%2B&showMh=lindel"
file <- "373-fw.txt"
fw.373 <- extractCrispor(web, file, strand = "fwd", seq = dppa3)
## plots
library(patchwork)
q1 <- (rev.53$plot / rev.87$plot) | (rev.121$plot / rev.151$plot)
ggsave(filename = "../../results/simulation/dist-deletions.png", plot = q1,
scale = 1, width = 20, height = 10, units = c("in"),
dpi = 500, limitsize = TRUE)
q2 <- (rev.198$plot / fw.277$plot) | (fw.373$plot / rev.323$plot)
q2
q2 <- (rev.198$plot / fw.277$plot) | (fw.373$plot / rev.323$plot)
ggsave(filename = "../../results/simulation/dist-deletions_2.png", plot = q2,
scale = 1, width = 20, height = 10, units = c("in"),
dpi = 500, limitsize = TRUE)
rev.53$dat
rev.87$dat
dim(rev.53)
dim(rev.53$dat)
445*7512
3342840/1e6
446*7512/1e6
7512
rev.53
View(rev.53$dat)
#####################################################
# @Author: Ayush T. Raman
# Aryee Lab, Broad Institute of MIT and Harvard
# Date: 1st August 2020
#
# Program is used for:
# 1. scRNA-seq analysis using seurat
#####################################################
## Clearing Workspace
rm(list = ls())
set.seed(1234)
## workspace
setwd("~/Desktop/scDNMTKO_Ola/scRNA-seq/scRNAseq/src/")
source("scRNAseq_analysis_final/libraries.R")
file.path <- "~/Desktop/scDNMTKO_Ola/scRNA-seq/scRNAseq/dat/STAR_stringent/"
num.Reads <- 0
cols <- c("#4DAF4A", "dodgerblue", "#FDE725FF", "#FF7F00", "#E41A1C")
shapes <- c(19, 15, 17, 18, 3, 4, 8, 10, 13)
load(file = "../results/seurat.RData")
View(markers)
#############################################################
# @Author: Ayush T Raman
# Meissner Lab, Broad Institute of MIT and Harvard
# Date: 26th Jan 2020
#
# Program is used for:
# 1. Project with Sudhir
# 2. summary analysis with the overlap
#############################################################
rm(list = ls())
library(BSgenome.Hsapiens.UCSC.hg19)
library(GenomicRanges)
library(ggpubr)
library(IlluminaHumanMethylation450kanno.ilmn12.hg19)
library(patchwork)
library(reshape2)
library(SummarizedExperiment)
library(TCGAbiolinks)
library(tidyverse)
## function
theme_ar <- function(){
theme(plot.title = element_text(size=16, face="bold", hjust = 0.5),
axis.title.y= element_text(size=16, colour="black", face="bold"),
axis.text.y = element_text(size=16, colour="black", face="bold"),
axis.title.x = element_text(size=16, colour="black", face="bold"),
axis.text.x = element_text(size=14, colour="black", face="bold"),
legend.text = element_text(size = 10, face = "bold"),
legend.title = element_blank())
}
## hypo regions and agg-methylation dataset
setwd("~/Desktop/sudhir/dat")
load("../results/wgbs/AggMethRegions-vs-hypoRegions.RData")
data  <- read.table(file = "ConstantHypoRegions_3KBFromCGIs_HG19.txt",
header = T, sep = "\t", quote = "", stringsAsFactors = F)
data <- sort(GRanges(data))
crc <- agg.meth.obj$`COAD-READ`
crc <- GRanges(crc[crc$methdiff > 0.2, ])
#View(as.data.frame(data[queryHits(findOverlaps(data,crc))]))
## loops from sarah's dataset
# library(readxl)
# loops <- read_excel(path = "../dat/sarah_crc/diff_loops.xlsx", skip = 1)
# loops <- loops[loops$geneID %in% data$Gene.Name,]
# loops
## HiC comparison
rm(list = ls())
library(BiocParallel)
library(HiCcompare)
data('hg19_blacklist')
load("../dat/HiCcompare_1MB_paired-samples.RData")
BRD3162.comp
data
#############################################################
# @Author: Ayush T Raman
# Meissner Lab, Broad Institute of MIT and Harvard
# Date: 26th Jan 2020
#
# Program is used for:
# 1. Project with Sudhir
# 2. summary analysis with the overlap
#############################################################
rm(list = ls())
library(BSgenome.Hsapiens.UCSC.hg19)
library(GenomicRanges)
library(ggpubr)
library(IlluminaHumanMethylation450kanno.ilmn12.hg19)
library(patchwork)
library(reshape2)
library(SummarizedExperiment)
library(TCGAbiolinks)
library(tidyverse)
## function
theme_ar <- function(){
theme(plot.title = element_text(size=16, face="bold", hjust = 0.5),
axis.title.y= element_text(size=16, colour="black", face="bold"),
axis.text.y = element_text(size=16, colour="black", face="bold"),
axis.title.x = element_text(size=16, colour="black", face="bold"),
axis.text.x = element_text(size=14, colour="black", face="bold"),
legend.text = element_text(size = 10, face = "bold"),
legend.title = element_blank())
}
## hypo regions and agg-methylation dataset
setwd("~/Desktop/sudhir/dat")
load("../results/wgbs/AggMethRegions-vs-hypoRegions.RData")
data  <- read.table(file = "ConstantHypoRegions_3KBFromCGIs_HG19.txt",
header = T, sep = "\t", quote = "", stringsAsFactors = F)
data <- sort(GRanges(data))
crc <- agg.meth.obj$`COAD-READ`
crc <- GRanges(crc[crc$methdiff > 0.2, ])
#View(as.data.frame(data[queryHits(findOverlaps(data,crc))]))
## loops from sarah's dataset
# library(readxl)
# loops <- read_excel(path = "../dat/sarah_crc/diff_loops.xlsx", skip = 1)
# loops <- loops[loops$geneID %in% data$Gene.Name,]
# loops
## HiC comparison
rm(list = ls())
library(BiocParallel)
library(HiCcompare)
data('hg19_blacklist')
mergeHiC <- function(mat, bed){
mat <- read.table(mat)
bed <- read.table(bed)
dat <- hicpro2bedpe(mat, bed)
dat <- dat$cis
return(dat)
}
compareHiC <- function(tumor, normal){
dat <- mapply(create.hic.table, tumor, normal, scale=FALSE, SIMPLIFY = FALSE)
dat <- total_sum(dat)
register(MulticoreParam(workers = 10), default = TRUE)
dat <- hic_loess(dat, Plot=TRUE, parallel=TRUE)
dat <- hic_compare(dat, A.min = NA, adjust.dist = TRUE,
p.method = 'fdr', Plot = TRUE, parallel = TRUE)
dat <- do.call(rbind, dat)
dat <- dat[dat$p.adj<0.05,]
return(dat)
}
## overlap of diff HiC compared files vs hypo regions
overlap.hypoRegions <- function(hicfile, dat){
colnames(hicfile)[1:3] <- c("seqnames", "start", "end")
hicfile <- GRanges(hicfile)
hic.dat <- hicfile[unique(subjectHits(findOverlaps(dat, hicfile)))]
dat.hic <- dat[unique(queryHits(findOverlaps(dat, hicfile)))]
dat.idx <- unique(queryHits(findOverlaps(dat, hicfile)))
return(list(dat.ol = dat.hic, hic.ol = hic.dat, dat.idx = dat.idx))
}
load("../dat/HiCcompare_1MB_paired-samples.RData")
BRD3162.ol <- overlap.hypoRegions(BRD3162.comp, data)
BRD3179.ol <- overlap.hypoRegions(BRD3179.comp, data)
BRD3187.ol <- overlap.hypoRegions(BRD3187.comp, data)
BRD3328.ol <- overlap.hypoRegions(BRD3328.comp, data)
BRD3462.ol <- overlap.hypoRegions(BRD3462.comp, data)
all.idx <- unique(c(BRD3162.ol$dat.idx, BRD3179.ol$dat.idx, BRD3187.ol$dat.idx,
BRD3328.ol$dat.idx, BRD3462.ol$dat.idx))
mat <- data.frame(regions = all.idx)
mat$BRD3162 <- ifelse(mat$regions %in% BRD3162.ol$dat.idx, 1, 0)
mat$BRD3179 <- ifelse(mat$regions %in% BRD3179.ol$dat.idx, 1, 0)
mat$BRD3187 <- ifelse(mat$regions %in% BRD3187.ol$dat.idx, 1, 0)
mat$BRD3328 <- ifelse(mat$regions %in% BRD3328.ol$dat.idx, 1, 0)
mat$BRD3462 <- ifelse(mat$regions %in% BRD3462.ol$dat.idx, 1, 0)
## loading the diff HiC regions
load("../dat/HiCcompare_1MB_paired-samples.RData")
BRD3162.ol <- overlap.hypoRegions(BRD3162.comp, data)
data
#############################################################
# @Author: Ayush T Raman
# Meissner Lab, Broad Institute of MIT and Harvard
# Date: 26th Jan 2020
#
# Program is used for:
# 1. Project with Sudhir
# 2. summary analysis with the overlap
#############################################################
rm(list = ls())
library(BSgenome.Hsapiens.UCSC.hg19)
library(GenomicRanges)
library(ggpubr)
library(IlluminaHumanMethylation450kanno.ilmn12.hg19)
library(patchwork)
library(reshape2)
library(SummarizedExperiment)
library(TCGAbiolinks)
library(tidyverse)
## function
theme_ar <- function(){
theme(plot.title = element_text(size=16, face="bold", hjust = 0.5),
axis.title.y= element_text(size=16, colour="black", face="bold"),
axis.text.y = element_text(size=16, colour="black", face="bold"),
axis.title.x = element_text(size=16, colour="black", face="bold"),
axis.text.x = element_text(size=14, colour="black", face="bold"),
legend.text = element_text(size = 10, face = "bold"),
legend.title = element_blank())
}
## hypo regions and agg-methylation dataset
setwd("~/Desktop/sudhir/dat")
load("../results/wgbs/AggMethRegions-vs-hypoRegions.RData")
data  <- read.table(file = "ConstantHypoRegions_3KBFromCGIs_HG19.txt",
header = T, sep = "\t", quote = "", stringsAsFactors = F)
data <- sort(GRanges(data))
crc <- agg.meth.obj$`COAD-READ`
crc <- GRanges(crc[crc$methdiff > 0.2, ])
#View(as.data.frame(data[queryHits(findOverlaps(data,crc))]))
## loops from sarah's dataset
# library(readxl)
# loops <- read_excel(path = "../dat/sarah_crc/diff_loops.xlsx", skip = 1)
# loops <- loops[loops$geneID %in% data$Gene.Name,]
# loops
overlap.hypoRegions <- function(hicfile, dat){
colnames(hicfile)[1:3] <- c("seqnames", "start", "end")
hicfile <- GRanges(hicfile)
hic.dat <- hicfile[unique(subjectHits(findOverlaps(dat, hicfile)))]
dat.hic <- dat[unique(queryHits(findOverlaps(dat, hicfile)))]
dat.idx <- unique(queryHits(findOverlaps(dat, hicfile)))
return(list(dat.ol = dat.hic, hic.ol = hic.dat, dat.idx = dat.idx))
}
load("../dat/HiCcompare_1MB_paired-samples.RData")
BRD3162.ol <- overlap.hypoRegions(BRD3162.comp, data)
BRD3179.ol <- overlap.hypoRegions(BRD3179.comp, data)
BRD3187.ol <- overlap.hypoRegions(BRD3187.comp, data)
BRD3328.ol <- overlap.hypoRegions(BRD3328.comp, data)
BRD3462.ol <- overlap.hypoRegions(BRD3462.comp, data)
BRD3162.ol
BRD3162.comp
BRD3179.comp
BRD3187.comp
BRD328.comp
BRD3328.comp
BRD3162.ol$dat.idx
BRD3162.ol <- overlap.hypoRegions(BRD3162.comp, data)
BRD3179.ol <- overlap.hypoRegions(BRD3179.comp, data)
BRD3187.ol <- overlap.hypoRegions(BRD3187.comp, data)
BRD3328.ol <- overlap.hypoRegions(BRD3328.comp, data)
BRD3462.ol <- overlap.hypoRegions(BRD3462.comp, data)
all.idx <- unique(c(BRD3162.ol$dat.idx, BRD3179.ol$dat.idx, BRD3187.ol$dat.idx,
BRD3328.ol$dat.idx, BRD3462.ol$dat.idx))
data[all.idx]
mat <- data.frame(regions = all.idx)
mat$BRD3162 <- ifelse(mat$regions %in% BRD3162.ol$dat.idx, 1, 0)
mat$BRD3179 <- ifelse(mat$regions %in% BRD3179.ol$dat.idx, 1, 0)
mat$BRD3187 <- ifelse(mat$regions %in% BRD3187.ol$dat.idx, 1, 0)
mat$BRD3328 <- ifelse(mat$regions %in% BRD3328.ol$dat.idx, 1, 0)
mat$BRD3462 <- ifelse(mat$regions %in% BRD3462.ol$dat.idx, 1, 0)
## upsetR plot
library(UpSetR)
upset(data = mat)
common.idx <- mat[which(mat$BRD3162 == 1 & mat$BRD3179 == 1 & mat$BRD3187 == 1 &
mat$BRD3328 == 1 & mat$BRD3462 == 1),"regions"]
data[common.idx]
rm(list = ls())
## libraries
library(dplyr)
library(ggplot2)
library(ggpubr)
library(GenomicRanges)
library(rtracklayer)
## liftOver
#load("/Users/araman/Desktop/CREs/all_CREs_per-sample.RData")
load("/data/aryee/aayushraman/bin/CREs/all_CREs_per-sample.RData")
chain <- import.chain("hg38ToHg19.over.chain") ## ~/Desktop/CREs/
hg19 <- as.data.frame(liftOver(hg38, chain))
hg19 <- sort(GRanges(hg19))
hg19 <- hg19[grep(pattern = "pELS|dELS|pELS", x = hg19$CRE)]
hg19 <- hg19[width(hg19) >= 151]
## overlap of colon enhancers with
# metadata <- read.table(file = "~/Desktop/CREs/metadata.txt", header = T,
#                        sep = "\t", quote = "", stringsAsFactors = F, fill = T)
metadata <- read.table(file = "metadata.txt", header = T, sep = "\t",
quote = "", stringsAsFactors = F, fill = T)
head(metadata)
annot <- c("brain", "immune", "colon", "connective_tissue", "embryo",
"epithelium", "fibroblast", "pancreas", "prostate", "skin",
"small_intestine")
idx <- which(metadata$Annotation %in% annot)
metadata <- metadata[idx,]
## DERs
#setwd("~/Desktop/BCM-MDProjects/CRCT/dat_cms-epic/DERs")
ders1 <- import("Cluster1.bed", format = "bed")
ders2 <- import("Cluster2.bed", format = "bed")
ders3 <- import("Cluster3.bed", format = "bed")
ders4 <- import("Cluster4.bed", format = "bed")
## subsetting genomic coord
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
columns <- colnames(hg19.dat)[colnames(hg19.dat) %in% metadata$sample]
columns <- c(colnames(hg19.dat)[1:10], columns)
hg19.dat <- hg19.dat[,columns]
gcord <- c()
for(k in 11:ncol(hg19.dat)){
ind <- which(grepl(pattern = "H3K27ac|pELS|dELS|pELS",
x = hg19.dat[,k]) == TRUE)
gcord <- c(gcord, ind)
}
gcord <- unique(gcord)
hg19.dat <- hg19.dat[gcord, ]
rm(list = ls())
## libraries
library(dplyr)
library(ggplot2)
library(ggpubr)
library(GenomicRanges)
library(rtracklayer)
## liftOver
load("/Users/araman/Desktop/CREs/all_CREs_per-sample.RData")
#load("/data/aryee/aayushraman/bin/CREs/all_CREs_per-sample.RData")
chain <- import.chain("hg38ToHg19.over.chain") ## ~/Desktop/CREs/
hg19 <- as.data.frame(liftOver(hg38, chain))
load("/Users/araman/Desktop/CREs/all_CREs_per-sample.RData")
rm(list = ls())
## libraries
library(dplyr)
library(ggplot2)
library(ggpubr)
library(GenomicRanges)
library(rtracklayer)
## liftOver
load("/Users/araman/Desktop/CREs/all_CREs_per-sample.RData")
#load("/data/aryee/aayushraman/bin/CREs/all_CREs_per-sample.RData")
chain <- import.chain("~/Desktop/CREs/hg38ToHg19.over.chain") ## ~/Desktop/CREs/
hg19 <- as.data.frame(liftOver(hg38, chain))
hg19 <- sort(GRanges(hg19))
hg19 <- hg19[grep(pattern = "pELS|dELS|pELS", x = hg19$CRE)]
hg19 <- hg19[width(hg19) >= 151]
ders1 <- import("Cluster1.bed", format = "bed")
ders2 <- import("Cluster2.bed", format = "bed")
ders3 <- import("Cluster3.bed", format = "bed")
ders4 <- import("Cluster4.bed", format = "bed")
## DERs
setwd("~/Desktop/BCM-MDProjects/CRCT/dat_cms-epic/DERs")
ders1 <- import("Cluster1.bed", format = "bed")
ders2 <- import("Cluster2.bed", format = "bed")
ders3 <- import("Cluster3.bed", format = "bed")
ders4 <- import("Cluster4.bed", format = "bed")
## subsetting genomic coord
hg19.dat <- as.data.frame(hg19)
colnames(hg19.dat) <- gsub(pattern = "\\.", replacement = "-",
x = colnames(hg19.dat))
columns <- colnames(hg19.dat)[colnames(hg19.dat) %in% metadata$sample]
columns <- c(colnames(hg19.dat)[1:10], columns)
hg19.dat <- hg19.dat[,columns]
gcord <- c()
for(k in 11:ncol(hg19.dat)){
ind <- which(grepl(pattern = "H3K27ac|pELS|dELS|pELS",
x = hg19.dat[,k]) == TRUE)
gcord <- c(gcord, ind)
}
rm(list = ls())
